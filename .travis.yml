language: java
jdk:
  - openjdk11

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# 압축해서 S3 전달
before_deploy:
  - zip -r boot-deploy *
  - mkdir -p deploy
  - mv boot-deploy.zip deploy/boot-deploy.zip

script: "./gradlew clean build"

after_success:
  - docker build -t brand13/jre ./
  - echo "$Docker_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin
  - docker push brand13/jre
  - echo "success!!!!!"

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: deploy-boot
    region: ap-northeast-2
    skip_cleanup: true
    local_dir: deploy
    acl: public_read
    wait-until-deployed: true
    on:
      repo: brand1313/boot-deploy
      branch: master
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: deploy-boot # S3 버킷
#    key: boot-deploy.zip # S3 버킷에 저장된 springboot-webservice.zip 파일을 EC2로 배포
#    bundle_type: zip
    application: boot-deploy # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: boot-deploy-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      repo: brand13/boot-deploy
      branch: master

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - brand13@naver.com